{
  "name": "chugr-tests",
  "version": "1.0.0",
  "description": "Comprehensive test suite for chugr project",
  "main": "index.js",
  "scripts": {
    "test": "jest",
    "test:unit": "jest --testPathPattern=backend/unit --testEnvironment=node",
    "test:unit:watch": "jest --testPathPattern=backend/unit --testEnvironment=node --watch",
    "test:unit:coverage": "jest --testPathPattern=backend/unit --testEnvironment=node --coverage",
    "test:integration": "jest --testPathPattern=backend/integration --testEnvironment=node",
    "test:integration:watch": "jest --testPathPattern=backend/integration --testEnvironment=node --watch",
    "test:integration:coverage": "jest --testPathPattern=backend/integration --testEnvironment=node --coverage",
    "test:e2e": "jest --testPathPattern=backend/e2e",
    "test:performance": "artillery run backend/performance/scenarios.yml",
    "test:security": "npm run test:security:owasp && npm run test:security:auth",
    "test:security:owasp": "zap-baseline.py -t http://localhost:3000",
    "test:security:auth": "jest --testPathPattern=backend/security",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "setup": "npm install",
    "setup:integration": "echo 'Using existing backend services'",
    "setup:integration:full": "docker-compose -f docker-compose.integration.yml up -d",
    "teardown": "echo 'No teardown needed - using existing services'",
    "teardown:integration": "echo 'No teardown needed - using existing services'",
    "teardown:integration:full": "docker-compose -f docker-compose.integration.yml down -v",
    "wait-for-services": "node scripts/wait-for-services.js",
    "test:integration:full": "npm run wait-for-services && npm run test:integration",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "eslint . --ext .js,.ts --fix"
  },
  "keywords": [
    "testing",
    "backend",
    "microservices",
    "integration-tests",
    "e2e-tests",
    "performance-tests",
    "security-tests"
  ],
  "author": "chugr team",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^29.5.5",
    "@types/node": "^20.6.0",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "artillery": "^2.0.0",
    "eslint": "^8.49.0",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "testcontainers": "^9.9.1",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "axios": "^1.5.0",
    "dotenv": "^16.3.1",
    "faker": "^6.6.6",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "pg": "^8.11.3",
    "redis": "^4.6.8",
    "socket.io-client": "^4.7.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/backend"],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "backend/**/*.ts",
      "!backend/**/*.d.ts",
      "!backend/**/node_modules/**"
    ],
    "coverageDirectory": "reports/coverage",
    "coverageReporters": ["text", "lcov", "html"],
    "setupFilesAfterEnv": ["<rootDir>/shared/helpers/jest.setup.ts"],
    "testTimeout": 30000,
    "maxWorkers": 4
  }
}
